#Consulted OpenAI ChatGPT-4 on chat.openai.com using the chat function.
#Link: https://chat.openai.com/
#Executed on a MacBook Air M1 8 cores (4p4e) 8GB RAM.
#Code generated by the model is preceded by #<BEGIN GENERATED model='gpt-4' date=2025-02-18>
#and followed by #<END GENERATED></END>.

from django.db import models
import uuid
from django.conf import settings
from django.contrib.auth.models import User  

class Author(models.Model):
    """
    An author who can create posts and comments and follow other authors
    """
    #<BEGIN GENERATED model='gpt-4' date=2025-02-18 prompt: here is my error (screenshot of error) why is this happening, i create an auther when i register, so why wont it redirect properly?>
    user = models.OneToOneField(User, on_delete=models.CASCADE, related_name="author", null=True, blank=True)
    #<END GENERATED></END>
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    username = models.CharField(max_length=100, unique=True)
    following = models.ManyToManyField('self', symmetrical=False)
    display_name = models.CharField(max_length=100, default="Display Name")
    github = models.URLField(null=True, blank=True)
    profile_image = models.ImageField(upload_to='images/', null=True, blank=True)
    page = models.URLField(null=True, blank=True)
    host = models.URLField(default=settings.BASE_URL)

    def __str__(self):
        return self.username
    
class Post(models.Model):
    """
    A post by an author with text and/or an image
    """
    id = models.UUIDField(primary_key=True, default=uuid.uuid4, editable=False)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    text = models.TextField(null=True, blank=True)
    image = models.ImageField(upload_to='images/', null=True, blank=True)
    video = models.FileField(upload_to='videos/', null=True, blank=True)
    created_at = models.DateTimeField(auto_now_add=True)
    updated_at = models.DateTimeField(auto_now=True)

    CONTENT_TYPE_CHOICES = [
        ('text/plain', 'Plain Text'),
        ('text/markdown', 'CommonMark'),
        ('image/png', 'PNG Image'),
        ('image/jpeg', 'JPEG Image'),
        ('video/mp4', 'MP4 Video'),
    ]
    content_type = models.CharField(choices=CONTENT_TYPE_CHOICES, default='text/plain', max_length=100)
    
    # Visibility options for a post
    VISIBILITY_CHOICES = [
        ('PUBLIC', 'Public'),
        ('UNLISTED', 'Unlisted'),
        ('FRIENDS', 'Friends'),
        ('DELETED', 'Deleted'),
    ]
    visibility = models.CharField(choices=VISIBILITY_CHOICES, default='PUBLIC', max_length=100)
    
    def __str__(self):
        return f"Post by {self.author.username} at {self.created_at}"

class PostLike(models.Model):
    """
    A like on a post by an author
    """
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)

    # Ensure that a user can only like a post once
    # https://docs.djangoproject.com/en/5.1/ref/models/options/#unique-together
    class Meta:
        unique_together = ['post', 'author']

class Comment(models.Model):
    """
    A comment on a post by an author
    """
    post = models.ForeignKey(Post, on_delete=models.CASCADE)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    text = models.TextField()
    created_at = models.DateTimeField(auto_now_add=True)

class CommentLike(models.Model):
    """
    A like on a comment by an author
    """
    comment = models.ForeignKey(Comment, on_delete=models.CASCADE)
    author = models.ForeignKey(Author, on_delete=models.CASCADE)
    created_at = models.DateTimeField(auto_now_add=True)

    # Ensure that a user can only like a comment once
    # https://docs.djangoproject.com/en/5.1/ref/models/options/#unique-together
    class Meta:
        unique_together = ['comment', 'author']